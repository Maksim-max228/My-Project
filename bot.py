from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import random

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["ü™® –ö–∞–º–µ–Ω—å", "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", "üìÑ –ë—É–º–∞–≥–∞"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º! –í—ã–±–∏—Ä–∞–π:", reply_markup=reply_markup)

# –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
async def play(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_choice = update.message.text
    options = ["ü™® –ö–∞–º–µ–Ω—å", "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", "üìÑ –ë—É–º–∞–≥–∞"]
    bot_choice = random.choice(options)

    if user_choice == bot_choice:
        result = "–ù–∏—á—å—è!"
    elif (user_choice == "ü™® –ö–∞–º–µ–Ω—å" and bot_choice == "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã") or \
         (user_choice == "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã" and bot_choice == "üìÑ –ë—É–º–∞–≥–∞") or \
         (user_choice == "üìÑ –ë—É–º–∞–≥–∞" and bot_choice == "ü™® –ö–∞–º–µ–Ω—å"):
        result = "–¢—ã –≤—ã–∏–≥—Ä–∞–ª! üî•"
    else:
        result = "–Ø –≤—ã–∏–≥—Ä–∞–ª üòé"

    await update.message.reply_text(f"–¢—ã –≤—ã–±—Ä–∞–ª: {user_choice}\n–Ø –≤—ã–±—Ä–∞–ª: {bot_choice}\n\n{result}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token("8366582630:AAEuV0NS6blSRJ-jfwar1ak4-gFnt_MidM4").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, play))

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã...")

app.run_polling()
app.run_polling()
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = "8366582630:AAEuV0NS6blSRJ-jfwar1ak4-gFnt_MidM4"

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–ø–µ—Ä—å –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤ –≥—Ä—É–ø–ø–µ üòé")

# –≠—Ö–æ-–æ—Ç–≤–µ—Ç (–±–æ—Ç –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(update.message.text)

def main():
    app = ApplicationBuilder().token(8366582630:AAEuV0NS6blSRJ-jfwar1ak4-gFnt_MidM4).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()

if __name__ == "__main__":
    main()